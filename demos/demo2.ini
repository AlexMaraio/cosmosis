[DEFAULT]
; This value is used below as %(planck_path)s
planck_path = cosmosis-standard-library/likelihood/planck2018/data/

[runtime]
sampler = test

[test]
save_dir=output/demo2
fatal_errors=T

[pipeline]
modules = consistency camb planck
values = demos/values2.ini
quiet=F
debug=T
timing=F



[planck]
;Planck 2018 high ell TT,TE and EE + low ell TT + low ell EE (in Planck notations = TT+lowE)
;without CMB lensing
file = cosmosis-standard-library/likelihood/planck2018/planck_interface.so
data_1 = %(planck_path)s/hi_l/plik/plik_rd12_HM_v22b_TTTEEE.clik
data_2 = %(planck_path)s/low_l/commander/commander_dx12_v3_2_29.clik
data_3 = %(planck_path)s/low_l/simall/simall_100x143_offlike5_EE_Aplanck_B.clik

; The consistency module translates between our chosen parameterization and any
; other that modules in the pipeline may want (e.g. camb).
[consistency]
file = cosmosis-standard-library/utility/consistency/consistency_interface.py


[camb]
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=all
lmax=3000
feedback=2
do_tensors=T
do_lensing=T
do_nonlinear=T
high_ell_template=$COSMOSIS_SRC_DIR/cosmosis-standard-library/boltzmann/camb/camb_Jan15/HighLExtrapTemplate_lenspotentialCls.dat
; because we will be using the Planck likelihood we also need to set the
; accuracy to higher values. This makes a big difference to the likelihood values (delta log L ~ 36)
accuracy_boost=1.1  ;CAMB accuracy boost parameter
high_accuracy_default=T