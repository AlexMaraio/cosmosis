[runtime]
; The emcee sampler, which uses the Goodman & Weare algorithm
sampler = emcee

[emcee]
; The emcee sampler uses the concept of walkers, a collection
; of live points.  Sampling is done along lines that connect
; pairs of walkers.  The number of walkers must be at least
; 2*nparam + 1, but in general more than that usually works
; better.
walkers = 64
; This many samples is overkill, just to make the plots
; look a lot nicer
samples = 1000
; This is the interval at which convergence diagnostics
; are performed
nsteps = 100

[pymc]
nsteps = 500
samples = 30000
adaptive_mcmc = True

;covmat = covmat6.txt
;covmat = covmat2.txt
; In adaptive MCMC the proposal covariance
; is gradually tuned whilst maintaining the overall
; chain convergence properties.  You could set:
; adaptive_mcmc = True
; and you would not need a covariance matrix.
; This converges faster than if you don't have a good
; covariance matrix but a little slower than if you have
; a good one.  It is a good choice for an initial run
; to get a good covmat.  In fact, that's how we made
; demos/covmat5.txt



[output]
filename = demo5.txt
format = text
verbosity= debug

[pipeline]
; We use two likelihoods, the JLA (for high redshift) and
; Riess 2011 to anchor H0, which is otherwise degenerate
; with the nuisance parameter M
modules = camb jla riess11
values = demos/values5.ini
extra_output =
likelihoods = jla riess
quiet=T
debug=F
timing=F

[maxlike]
; The values file we use in this example was
; created just like the one we made in demo4,
; by setting sampler = maxlike above, so that
; these settings were used:
output_ini = demos/values5.ini
tolerance = 1e-6



[camb]
; For background-only data we do not need a full
; Boltzmann evaluation, just D(z), etc.
; Setting mode=background means we get this.
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=background
feedback=0

[jla]
; JLA needs quite a lot of parameters telling it where
; data files are ...
file = cosmosis-standard-library/supernovae/jla_v3/jla.so
data_dir = cosmosis-standard-library/supernovae/jla_v3/data
data_file = jla_lcparams.txt
scriptmcut = 10.0
mag_covmat_file = jla_v0_covmatrix.dat
stretch_covmat_file = jla_va_covmatrix.dat
colour_covmat_file = jla_vb_covmatrix.dat
mag_stretch_covmat_file = jla_v0a_covmatrix.dat
mag_colour_covmat_file = jla_v0b_covmatrix.dat
stretch_colour_covmat_file = jla_vab_covmatrix.dat

[riess11]
file = cosmosis-standard-library/likelihood/riess11/riess11.py
