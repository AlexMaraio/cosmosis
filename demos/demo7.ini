[runtime]
; The emcee sampler, which uses the Goodman & Weare algorithm
sampler = emcee



[emcee]
; The emcee sampler uses the concept of walkers, a collection
; of live points.  Sampling is done along lines that connect
; pairs of walkers.  The number of walkers must be at least
; 2*nparam + 1, but in general more than that usually works
; better.
walkers = 64
samples = 100
; This is the interval at which convergence diagnostics
; are performed
nsteps = 100

[pymc]
nsteps = 500
samples = 10000
adaptive_mcmc = True

;covmat = covmat6.txt
;covmat = covmat2.txt
; In adaptive MCMC the proposal covariance
; is gradually tuned whilst maintaining the overall
; chain convergence properties.  You could set:
; adaptive_mcmc = True
; and you would not need a covariance matrix.
; This converges faster than if you don't have a good
; covariance matrix but a little slower than if you have
; a good one.  It is a good choice for an initial run
; to get a good covmat.  In fact, that's how we made
; demos/covmat5.txt



[output]
filename = demo7.txt
format = text
verbosity= debug

[pipeline]
; We use one likelihood, the rsd_fsigma8 likelihood which uses growth parameters
; output from the growthfunction module and sigma_8 from camb
modules = camb growthfunction rsd_fsigma
values = demos/values7.ini
likelihoods = rsd_fsigma
extra_output =
quiet=T
debug=F
timing=F



[camb]
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=all
lmax = 2000
feedback=2


[growthfunction]
;the linear growth rate and function will be calculated at given redshift. Arrays of D(z), f(z),z from z=100 to 0 are also output.
file = cosmosis-standard-library/growth_factor/interface.so
redshift = 0.57

[rsd_fsigma]
;default =  fsigma8 data from Chuang et al 2013 BOSS DR9 at z=0.57
file = cosmosis-standard-library/likelihood/rsd_fsigma/rsd_fsigma.py
mean = 
sigma = 
redshift = 
feedback = 1
