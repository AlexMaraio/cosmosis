;
; This example ini file just runs a
; CosmoMC like analysis containing just
; CAMB, WMAP-9 and the HST key project
; H0 constraint.
;
; Before using this file you need to have:
; 1)  downloaded the WMAP data from 
; http://lambda.gsfc.nasa.gov/data/map/dr4/dcp/wmap_likelihood_full_v4p1.tar.gz
; 2) compiled the pipeline, as described in the README
;   - including the WMAP module, setting the WMAP9_DATA_DIR variable in your
;     Makefile.mine
;   - includng the CAMB module boltzmann/camb
; 
; You can run a single parameter set and get the likelihood with the command:
; ../sampler/test/run_pipeline.py values.ini output.fits
; 
; If it works then output.fits should contain CMB spectra and likelihoods from the parameters in values.ini
; 
; If this works you can continue with a
; more complete Monte-Carlo Markov Chain - see the help pages.
; This section describes what pipeline overall pipeline is to be run.
[pipeline]
;
; The root directory of the des-pipe installation.
; module paths are described relative to this path
root = ../    
;           
; The list of modules to run in this analysis.
; Some modules like camb_cmb calculates theory predictions.
; Others like hst and wmap compare these predictions to data and calculate
; a likelihood.
; Every module listed here needs to be a section name from later in the file.
modules = camb_cmb hst wmap
;
; These are the likelihoods that are extracted, summed, and passed to 
; the samplers.  Likelihood modules named above should save their results 
; with these names.
likelihoods = HST WMAP9

; Some modules will look up this data directory to decide where
; to find their files.  Other modules may just look in their own
; directory.
data = ../data/

; The file named here should contain the list of parameters
; to be sampled over (or left fixed).  See values.ini for an example.
values = values.ini

; Whether to suppress output, e.g. when running long chains
quiet = no

; Uncomment this to use the priors in priors.ini in addition
; to the parameter ranges in values.ini
; priors = priors.ini

[test]
; There are no options for the test sampler for now, 
; so there are no options here.  Move along.

[pymc]
; These are the options for the pymc sampler.
; If you use a different sampler they will be ignored.

; The name of the output file. 
name = samples.txt

; The input covariance matrix.
; The ordering of this file should be the same as 
; the ordering of the values file.
covmat = covmat.txt

; The number of samples to generate
samples = 20000
;20000

; If set to "yes", fit a Gaussian
; approximation to the likelihood, finding the 
; best-fit and approximate error bars.
; The samples are then drawn (very, very fast)
normal_approximation = no

; Use an older output format, with each parameter 
; in a different file.  Not recommended
old_output = no



[emcee]
; These are the options for the emcee sampler.
; If you use a different sampler they will be ignored.

; The emcee sampler uses a collection of live 
; parameter space points, called walkers.  This is the number of
; walkers.  It needs to be at least double the number of parameters,
; but significantly more is recommended.
walkers = 256
;256

; The number of Emcee samples **per walker**.  
samples = 100
;100

; The name of the output file.
outfile = emcee_samples.txt

; Enable a debug mode where more things are printed out.
debug = no

; Run a multi-process analysis with this many processes.
; If you are using the MPI version of the sampler this parameter is NOT
; used - the size of the MPI job is used instead.
threads = 1

; These sections describe what the different named modules are and where to
; find them.
; You can have modules here that are not actually used, so you can switch;
; between them just by changing the modules option at the top, rather than
;  re-writing the whole file. 

; In all of these sections:
;
;  "file" is that path to the shared lib or python module containing the
;         interface, 
; "function" is the function name in that file that is executed each time 
;            the module is called with new parameters
; "setup" is the function called once per process at the start of the run
;         that takes options from this file.

[camb_cmb]
; The Code for Anisotropies in the Microwave Background.
; Takes cosmological parameters as inputs
; Calculates CMB power spectra only as outputs
file = boltzmann/camb/camb.so
function = execute
setup=setup
mode=cmb
feedback=1
cmb_lmax=1200

[wmap]
; WMAP 9-year likelihood code.
; Takes CMB power spectra as input.
; Calculates a single total likelihood function as output
file = likelihood/wmap9/wmap_interface.so
function = execute

[hst]
; A simple likelihood that compares H0 to the Riess
; 2012(?) value H0 = 71 +/- 2 km/s/Mpc
file = likelihood/hst_h0/hst_h0.py
function = execute
setup = setup
